* <<<OE1>>> FUNDAMENTALS OF DATA STRUCTURES
:properties:
:author: 
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 2 | 0 | 2 | 3 |

** Course Objectives
- To understand the concepts of ADT 
- To comprehend the notion of linear and non linear data structures
- To use a suitable data structure for the given problem and implement them in a high level programming language
- To understand the concepts of sorting and hashing techniques

{{{unit}}}
|Unit I | LIST | 6 |
Abstract Data Types (ADTs) -- List ADT: Linked lists -- Doubly linked lists; Applications of lists: Polynomial addition.

{{{unit}}}
|Unit II | STACK AND QUEUE | 6 |
Stack ADT:  Stack model --  Implementation of stacks using arrays -- Applications:  Infix to postfix conversion -- Evaluating postfix expressions - Queue ADT: Queue model -- Array implementation of queues.

{{{unit}}}
|Unit III | TREES | 6 |
Trees: Preliminaries -- Tree traversals -- Expression trees -- Binary search trees -- AVL Trees. 

{{{unit}}}
|Unit IV | GRAPHS | 6 |
Graph Algorithms: Definitions -- Representation of graph -- Breadth-first traversal -- Depth-first traversal -- Shortest-path algorithm: Dijkstra's algorithm.

{{{unit}}}
|Unit V | SEARCHING AND SORTING TECHNIQUES | 6 |
Searching: Linear search -- Binary search; Sorting: Insertion sort -- Selection sort -- Merge sort;  

** SUGGESTIVE EXPERIMENTS
 - Represent polynomial as a linked list and perform polynomial addition
 - Array implementation of stack ADT
 - Convert infix expression to postfix and evaluate using Stack ADT
 -	Implement binary search tree. Produce its pre-order, in-order, and post-order traversals
 -	Represent graph using adjacency matrix and perform depth first traversal on the graph
 -	Implement Dijkstra’s algorithm to find the shortest path using graph
 -	Implement insertion sort and merge sort
 - Implement linear search and binary search
 

  
*Theory Periods: 30*

*Practical Periods: 30*

*Total Periods: 60*

** Course Outcomes
After the completion of this course, students will be able to: 
- Implement linear data structures and solve problems using them  (K3)
- Implement trees and graphs and use them to solve problems (K3)
- Implement various sorting and searching algorithms (K2)
- Compare stack, queue, trees and graphs (K2)

      
**Text Books
1. M. A. Weiss, “Data Structures and Algorithm Analysis in C”, Second Edition , Pearson Education, 2006
2. Richard F. Gilberg, Behrouz A. Forouzan, “Data Structures: A Pseudocode Approach with C”, Second Edition,
Cengage India, 2007.

**Reference Books
1. V. Aho, J. E. Hopcroft, and J. D. Ullman, “Data Structures and Algorithms”, Pearson Education, First Edition Reprint 2003.
2.	R. F. Gilberg, B. A. Forouzan, “Data Structures”, Second Edition, Thomson India Edition, 2005.
3.	Ellis Horowitz, Sartaj Sahni, Susan Anderson-Freed, "Fundamentals of Data Structures in C", Second Edition, University Press, 2008
4. S.Sridhar, “Design and Analysis of Algorithms”, First Edition, Oxford University Press. 2014
5. Byron Gottfried, Jitender Chhabra, “Programming with C” (Schaum's Outlines Series), Mcgraw Hill Higher Ed., III Edition, 2010 
