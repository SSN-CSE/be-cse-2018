* <<<303>>> DATA STRUCTURES
:properties:
:author: Ms. M. Saritha and Dr. B. Prabavathy
:date: 
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** Course Objectives
- To understand the concepts of ADT
- To comprehend the notion of linear and non linear data structures
- To design a suitable data structure for the given problem and
  implement them in a high level programming language
- To understand the need for different types of searching and sorting
  techniques
- To learn the introductory concepts of hashing techniques

{{{unit}}}
|Unit I | Linear Data Structure - List | 10 |
Algorithm analysis: Running time calculations; Abstract Data Types (ADTs); List ADT: Array implementation of lists –
Linked lists – Circular linked lists - Doubly linked lists; Applications of lists: polynomial manipulation.

{{{unit}}}
|Unit II | Linear Data Structures – Stacks and Queues | 8 |
Stack ADT: Stack model - Implementation of stacks; Applications: Balancing symbols, Infix to postfix conversion,
Evaluating postfix expressions; Queue ADT: Queue model - Array implementation of queues - Double ended queue; 
Applications of queues.

{{{unit}}}
|Unit III | Non Linear Data Structures – Trees   | 9 |
Trees: Preliminaries - Tree traversals; Binary trees: Expression trees; Binary Search Tree ADT - AVL Trees – 
B-Tree; Priority queues: Binary heap; Applications of trees.

{{{unit}}}
|Unit IV | Non Linear Data Structures – Graphs | 9 |
Graph algorithms: Definitions – Representation of graphs - Topological sort; Shortest-path
algorithms: Dijkstra's algorithm - All-Pairs shortest path; Breadth-first traversal – Depth-first traversal - Biconnectivity; Applications of graphs.

{{{unit}}}
|Unit V | Searching, Sorting and Hashing Techniques  | 9 |
Searching: Linear search – Binary search; Sorting: Bubble sort - Insertion sort -
Selection sort - Shell sort – Merge sort – Quicksort - Time complexity analysis of sorting algorithms; 
Hashing: Hash function - Separate chaining – Open addressing – Rehashing.

\hfill *Total: 45 Periods*

** Course Outcomes
After the completion of this course, students will be able to:
- Implement linear and non linear data structures (K3)
- Elucidate the concept of searching, sorting and hashing techniques (K2)
- Analyze a problem statement, identify possible data structures for
  solving it, and choose and implement an appropriate one within the
  constraints of the problem specification (K4)
- Critically analyze the various sorting algorithms (K2)

      

** Text book
1. M. A. Weiss, ``Data Structures and Algorithm Analysis in C'', Second
   Edition , Pearson Education, 2006
2. Richard F. Gilberg, Behrouz A. Forouzan, ``Data Structures: A Pseudocode Approach with C'', Second Edition,
Cengage India, 2007.

** References
1. A. V. Aho, J. E. Hopcroft, and J. D. Ullman, ``Data Structures and
   Algorithms'', Pearson Education, First Edition Reprint 2003.
2. R. F. Gilberg, B. A. Forouzan, ``Data Structures'', Second Edition,
   Thomson India Edition, 2005.
3. Ellis Horowitz, Sartaj Sahni, Susan Anderson-Freed, ``Fundamentals
   of Data Structures in C'', Second Edition, University Press, 2008
4. S.Sridhar, ``Design and Analysis of Algorithms``, First Edition, Oxford University Press. 2014
5. Byron Gottfried, Jitender Chhabra, ``Programming with C`` (Schaum’s Outlines Series), Mcgraw Hill Higher Ed., 
   III Edition, 2010
