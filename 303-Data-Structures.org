* <<<303>>> DATA STRUCTURES
:properties:
:author: Ms. M. Saritha and Dr. B. Prabavathy
:date: 
:end:

#+BEGIN_COMMENT
include at least one application of trees (?)
#+END_COMMENT

#+startup: showall

| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To understand the concepts of ADT
- To comprehend the notion of linear and non linear data structures
- To design a suitable data structure for the given problem and
  implement them in a high level programming language
- To understand the different types of searching and sorting techniques
- To learn the introductory concepts of hashing techniques.


| UNIT I | LINEAR DATA STRUCTURES - LIST | 10 |
Algorithm Analysis: Running time calculations; Abstract Data Types (ADTs); List ADT: Array implementation of lists --
Linked lists -- Circular linked lists -- Doubly linked lists -- Applications of lists: Polynomial manipulation.


| UNIT II | LINEAR DATA STRUCTURES – STACKS AND QUEUES | 8 |
Stack ADT: Stack model -- Implementation of stacks -- Applications: Balancing symbols -- Infix to postfix conversion --
Evaluating postfix expressions; Queue ADT: Queue model -- Array implementation of queues -- Applications of queues.


| UNIT III | NON LINEAR DATA STRUCTURES – TREES   | 9 |
Preliminaries: Implementation of trees -- Tree traversals with an application; Binary trees: Expression trees; Binary search tree ADT; AVL trees; B-Trees; Priority Queues: Binary heap.

#+BEGIN_COMMENT
Application of trees is included along with tree traversals. It's in the text book.
Threaded binary trees and B+ tree is removed as per AU syllabus, since it requires more no. of hours.
#+END_COMMENT

| UNIT IV | NON LINEAR DATA STRUCTURES – GRAPHS | 9 |
Graph Algorithms: Definitions -- Representation of graphs -- Topological sort -- Shortest-Path Algorithms: Dijkstra's algorithm -- All-pairs shortest path -- Breadth-first traversal -- Depth-first traversal -- Biconnectivity.

#+BEGIN_COMMENT
Cut vertex and Euler circuits are removed as per AU syllabus as we have included the application of graph i.e Shortest-Path Algorithms.
#+END_COMMENT

| UNIT V | SEARCHING, SORTING AND HASHING TECHNIQUES | 9 |
Searching: Linear search -- Binary search; Sorting: Insertion sort -- Selection sort -- Shell sort; Hashing: Hash function -- Separate chaining -- Open addressing -- Rehashing.

#+BEGIN_COMMENT
Few sorting techniques are removed as per AU syllabus due to time constraint.
#+END_COMMENT

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to:
- Implement linear data structures and apply for suitable problems (K3)
- Implement non linear data structures and apply for suitable problems (K3)
- Elucidate the concept of searching, sorting and hashing techniques (K2)
- Compare and contrast searching and sorting algorithms (K2)
- Analyze a problem statement and choose an appropriate data structure to solve it. (K4)

      
** TEXT BOOKS
1. M A Weiss, ``Data Structures and Algorithm Analysis in C'', Second
   Edition, Pearson Education, 2002
2. Richard F Gilberg, Behrouz A Forouzan, ``Data Structures: A
   Pseudocode Approach with C'', Second Edition, Cengage India, 2007.

** REFERENCES
1. A. V. Aho, J. E. Hopcroft, and J. D. Ullman, ``Data Structures and
   Algorithms'', Pearson Education, First Edition Reprint 2003.
2. R. F. Gilberg, B. A. Forouzan, ``Data Structures'', 2nd Edition,
   Thomson India Edition, 2005.
3. Ellis Horowitz, Sartaj Sahni, Susan Anderson-Freed, ``Fundamentals
   of Data Structures in C'', 2nd Edition, University Press, 2008
4. S Sridhar, ``Design and Analysis of Algorithms``, 1st Edition, Oxford University Press. 2014
5. Byron Gottfried, Jitender Chhabra, ``Programming with C`` (Schaum’s Outlines Series), 3rd Edition, Mcgraw Hill Higher Ed.,2010.
