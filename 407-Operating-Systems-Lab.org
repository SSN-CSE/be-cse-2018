* <<<407>>> OPERATING SYSTEMS LAB
:properties:
:author: Mr. H. Shahul Hamead and Ms. S. Lakshmi Priya
:date: 13-11-2018
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 0 | 0 | 3 | 1.5 |

** COURSE OBJECTIVES
- To learn and implement basic Unix commands using system calls
- To implement various CPU Scheduling Algorithms
- To implement Process Creation and Inter Process Communication
- To implement Deadlock Avoidance and Deadlock Detection algorithms
- To implement Page Replacement Algorithms
- To implement File Organization and File Allocation Strategies

** LIST OF EXPERIMENTS
1. Basics of UNIX commands and study of system calls.
2. Write C programs to simulate UNIX commands using system calls.
3. Write C programs to implement the various CPU Scheduling Algorithms
4. Implementation of Semaphores
5. Implementation of Shared memory and IPC
6. Bankers Algorithm for Deadlock Avoidance
7. Write C program to implement Threading & Synchronization Applications
8.  Implementation of the following Memory Allocation Methods for variable sized partition
   a) First Fit      b) Worst Fit      c) Best Fit 
9. Implementation of Paging Technique of Memory Management
10. Implementation of the following Page Replacement Algorithms
    a) FIFO     b) LRU      c) LFU
11. Implementation of the various File Organization Techniques
    a) Single-level   b) Hierarchical
12. Implementation of the following File Allocation Strategies
    a) Sequential     b) Indexed        c) Linked

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Analyze the performance of various CPU Scheduling Algorithms (K4)
- Implement Deadlock avoidance and Detection Algorithms (K3)
- Implement Semaphores and IPC (K3)
- Analyze the performance of the various Page Replacement Algorithms (K4)
- Implement  File Organization and File Allocation Strategies (K3)
      
** REQUIREMENTS FOR A BATCH OF 30 STUDENTS
Desktop with Unix/Linux with C/C++ for every student
