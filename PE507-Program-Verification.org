* <<<PE507>>> PROGRAM VERIFICATION
:properties:
:author: Dr. S. Sheerazuddin and Dr. R. S. Milton
:date: 13 November 2018
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To understand the need of logics for specification and verification
  of computer systems.
- To learn program correctness using Hoare Logic
- To learn the skill of writing formal specifications in LTL and CTL.
- To learn model checking algorithms for LTL and CTL.
- To learn model checking for Timed Systems.
# - To learn symbolic model checking for LTL and CTL.

{{{unit}}}
| UNIT I | FOUNDATIONS | 9 |
Foundations; Propositional Logic: Syntax – Semantics – Proof Theory;
Predicate Logic: Syntax – Semantics – Proof Theory; LTL; Syntax --
Semantics -- Specifications in LTL; CTL: Syntax -- Semantics --
Specifications in CTL; CTL* and the expressive powers of LTL and CTL;

{{{unit}}}
| UNIT II | HOARE LOGIC AND PROGRAM CORRECTNESS | 9 |
Foundations; A framework for program correctness: A core programming
language -- Hoare triples -- Partial and total correctness -- Program
variables and logical variables; Proof calculus for partial
correctness: Proof rules -- Proof tableaux; Proof calculus for total
correctness;

{{{unit}}}
| UNIT III | MODEL CHECKING | 9 |
Foundations; Model-checking algorithms: The CTL model-checking
algorithm -- CTL model checking with fairness -- The LTL
model-checking algorithm; CTL* Model-checking algorithm; Model
Checking using Automata; Checking Emptiness; Translating LTL into
Automata; On-the-fly Model checking;

{{{unit}}}
| UNIT IV | SYMBOLIC MODEL CHECKING | 9 |
Binary Decision Diagrams: Representing Boolean formulas – Representing
Kripke Structures; Fixpoint Representations; Symbolic Model Checking
for CTL; Fairness in Symbolic Model Checking; Counterexamples and
Witnesses; Relational Product Computations; Symbolic Model Checking
for LTL; NuSMV;

{{{unit}}}
| UNIT V | MODEL CHECKING TIMED SYSTEMS | 9 |
Foundations; Timed Automata: Semantics -- Time Divergence – Timelock
-- Zenoness; Timed Computation Tree Logic; TCTL Model Checking:
Eliminating Timing Parameters -- Region Transition Systems -- The TCTL
Model-Checking Algorithm; Model checkers for Timed Automata: UPPAAL –
KRONOS;


\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Prove partial correctness of simple programs using Hoare logic (K3).
- Write formal properties and specifications in CTL and LTL (K3).
- Specify and verify simple systems using NuSMV (K3).
- Specify and verify simple systems using UPPAAL (K3).

** TEXTBOOKS
1. M. Huth and M. Ryan, ``Logic in Computer Science -- Modeling and
   Reasoning About Systems'', Second Edition, Cambridge University
   Press, 2004. (Units I, II and III)
2. Edmund Clarke, Orna Grumberg, and Doron Peled, ``Model Checking'',
   The MIT Press, 1999. (Units III and IV)
3. C Baier and J Katoen, ``Principles of Model Checking'', The MIT
   Press, 2008. (Unit V)
   
** REFERENCES
1. Michael Clarke, Thomas Henzinger, Helmut Veith, Roderick Bloem,
   ``Handbook of Model Checking'', Springer 2018
2. Orna Grumberg, Helmut Veith, ``25 Years of Model Checking: History,
   Achievements, Perspectives'' Springer-Verlag, 2008
3. Zohar Manna, Amir Pnueli, ``Temporal Verification of Reactive
   Systems: Safety'', Springer-Verlag, 2012
4. Krzysztof R. Apt, Frank S. de Boer, Ernst-Rüdiger Olderog,
   ``Verification of Sequential and Concurrent Programs'', Springer,
   3rd edition, 2009
