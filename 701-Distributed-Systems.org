* <<<701>>> DISTRIBUTED SYSTEMS
:properties:
:author: Ms. Y. V. Lokeswari and Mr. H. Shahul Hamead 
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To introduce the computation and communication models of distributed systems.
- To illustrate the issues of synchronization and collection of information in distributed systems.
- To educate distributed mutual exclusion and distributed deadlock detection techniques.
- To elucidate agreement protocols and Fault Tolerance mechanisms in Distributed Systems. 
- To explain the features of Peer-to-Peer systems and memory consistency models.


{{{unit}}}
|UNIT I|INTRODUCTION|8| 
Introduction: Definition-Relation to computer system components --
Motivation -- Relation to parallel multiprocessor/multicomputer
systems -- Message-passing systems versus shared memory systems --
Primitives for distributed communication -- Synchronous versus
asynchronous executions -- Design issues and challenges; A model of
distributed computations: A distributed program -- A model of
distributed executions -- Models of communication networks -- Global
state of a distributed system -- Cuts of a distributed computation --
Past and future cones of an event -- Models of process communications.

{{{unit}}}
|UNIT II |LOGICAL TIME AND GLOBAL STATE|10| 
Logical Time: Physical clock synchronization: NTP -- A framework for a
system of logical clocks -- Scalar time -- Vector time; Message
ordering and group communication: Message ordering paradigms --
Asynchronous execution with synchronous communication -- Synchronous
program order on an asynchronous system -- Group communication --
Causal order (CO) Total order; Global state and snapshot recording
algorithms: Introduction -- System model and definitions -- Snapshot
algorithms for FIFO channels.

{{{unit}}}
|UNIT III|DISTRIBUTED MUTEX AND DEADLOCK|10| 
Distributed mutual exclusion algorithms: Introduction -- Preliminaries
-- Lamport’s algorithm -- Ricart–Agrawala algorithm -- Quorum-based
mutual exclusion algorithms -- Maekawa’s algorithm -- Token-based
algorithms -- Suzuki–Kasami’s broadcast algorithm; Deadlock detection
in distributed systems: Introduction -- Models of deadlocks -- Knapp’s
classification of distributed deadlock detection algorithms --
Mitchell and Merritt’s algorithm for the single resource model --
Chandy–Misra–Haas algorithm for the AND & OR model.

{{{unit}}}
|UNIT IV| CONSENSUS AND RECOVERY|10|
Consensus and agreement algorithms: Problem definition -- Overview of
results -- Agreement in a failure-free system (synchronous or
asynchronous) -- Agreement in (message-passing) synchronous systems
with failures; Checkpointing and rollback recovery: Introduction --
Background and definitions -- Issues in failure recovery --
Checkpoint-based recovery -- Log-based rollback recovery -- Koo–Toueg
coordinated checkpointing algorithm -- Juang–Venkatesan algorithm for
asynchronous checkpointing and recovery.

{{{unit}}}
|UNIT V|PEER TO PEER AND DISTRIBUTED SHARED MEMORY|7|
Peer-to-peer computing and overlay graphs: Introduction -- Data
indexing and overlays -- Tapestry; Distributed shared memory:
Abstraction and advantages -- Memory consistency models -- Lamport's
Bakery Algorithm.


\hfill *Total Periods: 45*

** COURSE OUTCOMES
Upon the completion of the course the students should be able to: 
- Understand the foundations of Distributed Systems (K2).
- Solve synchronization and state consistency problems (K3).
- Demonstrate the resource sharing techniques in Distributed systems (K3).
- Comprehend the working model of consensus and reliability of Distributed Systems (K3).
- Understand the fundamentals of Peer-to-Peer Systems (K2).


** TEXT BOOKS
1. Kshemkalyani, Ajay D, and Mukesh Singhal, ``Distributed computing:
   Principles, Algorithms, and Systems'', Cambridge University Press,
   2011
2. Mukesh Singhal, Niranjan G, and Shivaratri, ``Advanced Concepts in
   Operating Systems'', McGraw-Hill, Inc., 1994.
	
** REFERENCES
1. George Coulouris, Jean Dollimore and Tim Kindberg, ``Distributed
   Systems Concepts and Design'', Fifth Edition, Pearson
   Education, 2012.
2. Pradeep K Sinha, ``Distributed Operating Systems: Concepts and
   Design'', Prentice Hall of India, 2007.
3. Tanenbaum A.S., Van Steen M., ``Distributed Systems: Principles and
   Paradigms'', Pearson Education, 2007.
4. Liu M.L., ``Distributed Computing, Principles and Applications'',
   Pearson Education, 2004.
5. Nancy A Lynch, ``Distributed Algorithms'', Morgan Kaufman
   Publishers, USA, 2003.

