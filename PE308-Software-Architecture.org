* <<<PE308>>> SOFTWARE ARCHITECTURE
:properties:
:author: Dr Valli
:date: 13 November 2018
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |


** COURSE OBJECTIVES
- To understand the fundamentals of software architecture.
- To study the various software development methodologies.
- To learn the architectural evaluation procedure.
- To learn the various software architecture design components.
- To relate software architecture and software quality.

{{{unit}}}
| UNIT I | INTRODUCTION | 9 |
Basic Concepts of Software Architecture -- Architecture business cycle
-- architectural patterns -- reference models -- architectural
structures, views -- Introduction to Styles -- Simple Styles --
Distributed and Networked Architectures-Architecture for network based
applications -- Decentralized Architectures.

{{{unit}}}
| UNIT II | DESIGN METHODOLOGIES | 9 |
Structured Design -- Design Practices -- Stepwise Refinement --
Incremental Design -- Structured System Analysis and Design -- Jackson
Structured Programming -- Jackson System Development

{{{unit}}}
| UNIT III | ARCHITECTURE DESCRIPTION, DOCUMENTATION AND EVALUATION | 9 |
Early Architecture Description Languages -- Domain and Style Specific
ADLs -- Extensible ADLs -- Documenting Software architecture --
Architecture Evaluation -- ATAM; Understanding Quality Attributes --
Functionality and Architecture -- Architecture and Quality Attributes
-- System Quality Attributes -- Quality attribute Scenarios in
Practice.

{{{unit}}}
| UNIT IV | ARCHITECTURE DESIGN  | 9 |
Typical Architectural Design -- Data Flow -- Independent Components --
Call and Return - Using Styles in Design -- choices of styles --
Architectural design space -- Theory of Design Spaces -- Design space
of Architectural Elements -- Design space of Architectural styles.

{{{unit}}}
| UNIT V | CREATING ARCHITECTURE | 9 |
Introducing Tactics -- Availability Tactics -- Modifiability Tactics
-- Performance Tactics -- Security Tactics -- Testability Tactics --
Usability Tactics -- Relationship of Tactics to Architectural Patterns
-- Architectural Patterns and Styles.


\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
1. Develop software applications starting from software architecture
   and design (K2)
2. Understand and evaluate existing software architectures (K2)
3. Design methods for improving software quality from the perspective
   of software architecture (K3)
4. Describe the architecture based on architectural description
   language (K2)
5. Understand the different design methodologies and choose the best
   from them based on the software being built (K2)

** TEXTBOOKS
 1.  David Budgen, ``Software Design'', Second Edition, Pearson
   Education, 2004.
 2. Len Bass, Paul Clements, Rick Kazman, ``Software Architecture in
   Practice'', Third Edition, Addison Wesley, 2012.
** REFERENCES
 
1. Hong Zhu, ``Software Design Methodology from Principles to
   Architectural Styles'', Elsevier, 2005.
2. Mary Shaw, David Garlan, ``Software Architecture: Perspectives on
   an Emerging Discipline'', Pearson Education, 2008.
3. Richard N Taylor, Nenad Medvidovic, Eric M Dashofy, ``Software
   Architecture: Foundations, Theory and Practice'', Wiley 2010.
4. Nick Rozanski, Eoin Woods, “ Software Systems Architecture” Second Edition, 
   Addison-Wesley , 2012.
