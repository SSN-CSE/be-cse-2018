* <<<PE308>>> SOFTWARE ARCHITECTURE
:properties:
:author: Dr Valli
:date: 13 November 2018
:changed by : Dr. Chitra Babu
:date: 11 June 2019
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |


** COURSE OBJECTIVES
- To understand the fundamentals of software architecture.
- To learn the architectural views and styles
- To study the architectural description languages
- To learn the architectual evaluation techniques
- To relate software architecture and software quality.

{{{unit}}}
| UNIT I | INTRODUCTION | 9 |
Basic Concepts of Software Architecture -- Architecture Business Cycle
-- Architectural Patterns -- Reference Models -- Architectural
Structures, Views; Module Views, Component-Connector Views, Allocation Views 

{{{unit}}}
| UNIT II |ARCHITECTURAL STYLES | 9 |
Introduction to Architectural Styles -- Simple Styles --
Distributed and Networked Architectures -- Architecture for network
based applications -- Decentralized Architectures.

{{{unit}}}
| UNIT III | ARCHITECTURE DESCRIPTION, DOCUMENTATION AND EVALUATION | 9 |
Early Architecture Description Languages -- Domain and Style Specific
ADLs -- Extensible ADLs -- Documenting Software architecture --
Architecture Evaluation -- ATAM; 

{{{unit}}}
| UNIT IV | ARCHITECTURE DESIGN  | 9 |
Typical Architectural Design -- Data Flow -- Independent Components --
Call and Return -- Using Styles in Design -- Choices of styles --
Architectural design space -- Theory of Design Spaces -- Design Space
of Architectural Elements -- Design Space of Architectural styles.

{{{unit}}}
| UNIT V | CREATING ARCHITECTURE | 9 |
Understanding Quality Attributes --
Functionality and Architecture -- Architecture and Quality Attributes
-- System Quality Attributes -- Quality Attribute Scenarios in
Practice -- Introducing Tactics -- Availability Tactics -- Modifiability Tactics
-- Performance Tactics -- Security Tactics -- Testability Tactics --
Usability Tactics -- Relationship of Tactics to Architectural Patterns
-- Architectural Patterns and Styles.


\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
1. Describe various architectural views(K2)
2. Apply suitable architectural styles based on the software quality requirements (K3)
3. Define ADLs and evaluate alternate architectural solutions (K4)
4. Construct new architectures based on the quality atteribute requirements (K4)
5. (K2)

** TEXTBOOKS
  
 1. Len Bass, Paul Clements, Rick Kazman, ``Software Architecture in
   Practice'', Third Edition, Addison Wesley, 2012.
 2. Richard N Taylor, Nenad Medvidovic, Eric M Dashofy, ``Software
   Architecture: Foundations, Theory and Practice'', Wiley 2010.
** REFERENCES
 

1. Mary Shaw, David Garlan, ``Software Architecture: Perspectives on
   an Emerging Discipline'', Pearson Education, 2008.
2. Nick Rozanski, Eoin Woods, “ Software Systems Architecture” Second Edition, 
   Addison-Wesley , 2012.
