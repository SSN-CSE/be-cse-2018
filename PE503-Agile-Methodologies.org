* <<<PE503>>> AGILE METHODOLOGIES
:properties:
:author: Dr. S. Saraswathi and Ms. K. Madheswari
:date: 
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** Course Objectives
- To understand the basic concepts of Agile software process.
- To gain knowledge in agile requirement engineering.
- To learn Planning and management in agile software development.
- To gain knowledge in various agile methodologies.
- To learn the principles of agile testing and Quality assurance. 

{{{unit}}}
|Unit I|Introduction|9| 
Iterative and evolutionary development; Introduction to Agile: Agile development -- Classification of methods -- Agile manifesto and principles -- Communication and feedback -- Specific agile methods -- agile modelling;  Theories for agile management; Management accounting for systems; Agile Project Management: Traditional versus RAD model for project management -- Task planning and effort tracking -- The project manager’s new work.


{{{unit}}}
|Unit II |Requirements Engineering for Agile Methods |9| 
Traditional and agile requirement engineering; Methods and Tools for Agile Practitioners: Requirements elicitation -- Requirements representation and documentation -- Requirements analysis, Requirements management; Agile Approaches to Requirements Engineering: The customer -- Waste in requirements -- Requirements evolution -- Non-Functional requirements; Tools for Requirements Management in AMs.

{{{unit}}}
|Unit III|Agile Project Planning and Development Management|9| 
Agile Project Planning: The Project buffer and its usage -- Logical collection of inventory -- Critical path -- Parallel path -- Critical chain -- Project tracking metrics;  Agile Development Management: Identifying and monitoring the flow -- Bottleneck; Agile Maturity Model: A new maturity model.

{{{unit}}}
|Unit IV| Agile Methods|9|
Scrum: Method Overview -- Life cycle -- Work products – Values -- Roles and Practices -- Process mixtures --  Adoption strategies;  Extreme Programming; Unified Process; EVO.


{{{unit}}}
|Unit V|Agile Testing and Quality Assurancet|9|
Agile testing: Nine principles and six concrete practices for testing on agile teams; Agile Metrics:  Feature Driven Development (FDD) -- Financial and production metrics in FDD --Agile approach to Quality Assurance -- Test Driven Development; Pair Programming: Issues and challenges -- Agile approach to global software development; Story cards based Requirements engineering Maturity Model (SMM).

\hfill *Total: 45*

** Course Outcomes
Upon the completion of the course the students should be able to: 
- Compare evolutionary, iterative and adaptive development (K2).
- Apply agile software process in requirement Engineering (K3).
- Apply agile methodologies for software design(K3).
- Apply agile based testing and quality assurance(K3).



** Text Books
1. David J. Anderson and Eli Schragenheim, ``Agile Management for Software Engineering: Applying the Theory of Constraints for Business Results'', Prentice Hall, 2003.
2. Craig Larman, ``Agile and Iterative Development: A Manager's Guide'', Addison-Wesley, 2004.
3. Elisabeth Hendrickson, ``Agile Testing'' Quality Tree Software Inc 2008.

	
** References
1. Hazza and Dubinsky, ``Agile Software Engineering, Series: Undergraduate Topics in Computer Science'', Springer, 2009.
2. Chetankumar Patel and Muthu Ramachandran, ``Story Card Maturity Model (SMM): A Process Improvement Framework for Agile Requirements Engineering Practices'', Journal of Software, Academy Publishers, Vol 4, No 5, 422-435, Jul 2009.
3. Kevin C. Desouza, ``Agile Information Systems: Conceptualization, Construction, and Management'', Butterworth-Heinemann, 2007.
4. Didar Zowghi, Zhi Jin, ``Requirements Engineering'', Springer , chapter 15, 2014.
5. Aybüke Aurum and Claes Wohlin, ``ngineering and Managing Software Requirements'', Springer 2005, chapter 14.
