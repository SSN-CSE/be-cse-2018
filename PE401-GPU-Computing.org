* <<<PE401>>> GPU COMPUTING
:properties:
:author: Dr. J. Suresh and Dr. D. Venkatavara Prasad
:date: 
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To understand the basics of GPU architectures.
- To write programs for massively parallel processors.
- To understand the issues in mapping algorithms for GPUs.
- To introduce different GPU programming models. 
- To understand the concepts of OpenCL.

{{{unit}}}
|UNIT I | GPU ARCHITECTURE | 12 |
Evolution of GPU architectures - Understanding Parallelism with GPU --
Typical GPU Architecture - CUDA Hardware Overview - Threads, Blocks,
Grids, Warps, Scheduling - Memory Handling with CUDA: Shared Memory,
Global Memory, Constant Memory and Texture Memory.

{{{unit}}}
|UNIT II | CUDA  PROGRAMMING | 8 |
Using CUDA - Multi GPU - Multi GPU Solutions - Optimizing CUDA
Applications: Problem Decomposition, Memory Considerations, Transfers,
Thread Usage, Resource Contentions.

{{{unit}}}
|UNIT III | PROGRAMMING ISSUES  | 8 |
Common Problems: CUDA Error Handling, Parallel Programming Issues,
Synchronization, Algorithmic Issues, Finding and Avoiding Errors.

{{{unit}}}
|UNIT IV | OPENCL BASICS | 8 |
OpenCL Standard – Kernels – Host Device Interaction – Execution
Environment – Memory Model – Basic OpenCL Examples.

{{{unit}}}
|UNIT V | ALGORITHMS ON GPU | 9 |
Parallel Patterns: Convolution, Prefix Sum, Sparse Matrix - Matrix
Multiplication - Programming Heterogeneous Cluster.


\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Understand GPU architecture (K2)
- Write programs using CUDA, identify issues and debug them (K3)
- Implement efficient algorithms in GPUs for common application
  kernels such as matrix multiplication (K3)
- Write simple programs using OpenCL (K3)
- Write an efficient parallel program for a given problem(K3)
      
** TEXT BOOKS
1. Shane Cook, ``CUDA Programming: A Developer's Guide to Parallel
   Computing with GPUs (Applications of GPU Computing)'', First
   Edition, Morgan Kaufmann, 2012.
2. David R. Kaeli, Perhaad Mistry, Dana Schaa, Dong Ping Zhang,
   ``Heterogeneous Computing with OpenCL'', 3rd Edition, Morgan
   Kauffman, 2015.

** REFERENCES
1. David B. Kirk, Wen-mei W. Hwu, ``Programming Massively Parallel
   Processors -- A Hands-on Approach'', 3rd Edition, Morgan
   Kaufmann, 2016.
2. Nicholas Wilt, ``CUDA Handbook: A Comprehensive Guide to GPU
   Programming'', Addison - Wesley, 2013.
3. Jason Sanders, Edward Kandrot, ``CUDA by Example: An Introduction
   to General Purpose GPU Programming'', Addison - Wesley, 2010.
4. http://www.nvidia.com/object/cuda_home_new.html	
5. http://www.openCL.org
