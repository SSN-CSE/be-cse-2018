* <<<403>>> OPERATING SYSTEMS
:properties:
:author: Mr. H. Haul Ha-mead and Ms. S. Lakshmi Priya
:date: 13-11-2018
:end:

#+startup: showall
#+macro: unit #+attr_latex: :width 100% :align @{}p{.125\textwidth}p{.755\textwidth}p{.15\textwidth} :font \bf
#+macro: credits #+attr_latex: :center nil

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To understand the structure and functions of OS.
- To learn about Processes, Threads and Scheduling algorithms. 
- To understand the principles of concurrency and Deadlocks. 
- To learn various memory management schemes. 
- To study I/O management and File systems.


{{{unit}}}
|UNIT I | OPERATING SYSTEMS OVERVIEW | 9 |
Computer System Overview: Basic elements -- Instruction execution –
Interrupts -- Memory hierarchy -- Cache memory -- Direct memory access
-- Multiprocessor and multicore organization; Operating System
Overview: Objectives and functions -- Evolution of operating
system;Computer System Organization; Operating System Structure and
Operations: System calls -- System programs -- OS generation and
system boot.

{{{unit}}}
|UNIT II | PROCESS MANAGEMENT | 12 |
Processes: Process concept -- Process scheduling -- Operations on
processes -- Interprocess Communication; Threads: Overview --
Multithreading Models -- Thread Issues; Process Synchronization -
Critical Section Problem -- Mutex Locks -- Semophores -- Monitors; CPU
Scheduling: FCFS, SJF, Priority, Roundrobin, Rate Montonic and EDF
scheduling; Deadlocks -- Avoidance -- Prevention -- Detection and
Recovery.

{{{unit}}}
|UNIT III | MEMORY MANAGEMENT | 8 |
Main Memory: Contiguous Memory Allocation -- Segmentation -- Paging --
32 and 64 bit architecture Examples; Virtual Memory: Demand paging --
Page replacement algorithms -- Allocation -- Thrashing.

{{{unit}}}
|UNIT IV | STORAGE MANAGEMENT | 9 |
Mass Storage Structure: Overview -- Disk scheduling and management;
File System Storage: File concepts -- Directory and disk structure --
Sharing and protection; File System Implementation: File system
structure -- Directory structure -- Allocation methods -- Free space
management -- I/O systems.

{{{unit}}}
|UNIT V | CASE STUDY | 7 |
Linux Vs Windows: Design principles -- Process management --
Scheduling -- Memory management -- File systems; Mobile OS: iOS and
Android -- Introduction and Architecture.

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Understand the basic services and functionalities of operating
  systems (K2)
- Analyze various scheduling algorithms, and understand the different
  schemes for handling deadlocks(K4)
- Understand the different memory management schemes (K2)
- Understand the functionality of file systems (K2)
- Compare and contrast Linux, Windows and mobile operating systems (K3).

** TEXT BOOKS
1. Abraham Silberschatz, Peter Baer Galvin and Greg Gagne, ``Operating
   System Concepts'', 9th Edition, John Wiley and Sons Inc., 2012.
2. Neil Smyth, ``iPhone iOS 4 Development Essentials - Xcode'', 4th
   Edition, Payload media,2011.

** REFERENCES
1. Ramaz Elmasri, A Gil Carrick, David Levine, ``Operating Systems A
   Spiral Approach'', Tata McGraw Hill Edition, 2010.
2. Achyut S Godbole, Atul Kahate, ``Operating Systems'', McGraw Hill
   Education, 2016.
3. Andrew S Tanenbaum, ``Modern Operating Systems'', 2nd Edition,
   Pearson Education, 2004.
4. Harvey M  Deitel, ``Operating Systems'', 3rd Edition, Pearson
   Education, 2004.
5. Daniel P Bovet and Marco Cesati, ``Understanding the Linux
   Kernel'', 3rd edition, O‘Reilly,2005.
