<<<PE103>>> SOFTWARE TESTING
:properties:
:author: Dr. K. Madheswari and Dr. A. Chamundeswari
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** Course Objectives
- To be familiar with objectives, principles, process, and factors of software testing 
- To learn the design of test cases using Black box approach and white box approaches
- To understand and apply the levels of testing 
- To understand automation methods in software testing
- Test the product finally to check the product Quality.

{{{unit}}}
|UNIT I| TESTING FUNDAMENTALS |9| 
Objectives and Principles: Fundamental test process -- Test levels --
Establishing a testing policy -- Structured approach to testing --
Test factors -- Developing risk matrix -- Steps in software testing
process.

{{{unit}}}
|UNIT II|  TEST CASE DESIGN STRATEGIES AND METHODS |9| 
Strategies and Methods for Test Case Design: Introduction to testing
design strategies -- Test case design strategies -- Using the black
box approach to test case design -- Random testing -- Equivalence
class partitioning -- Boundary value analysis -- Cause-and-effect
graphing -- State transition testing -- Error guessing; Using the
white box approach to test design -- Coverage and control flow graphs
-- Covering code logic -- Paths -- Data flow and white box test design
-- Loop testing--Mutation testing;

{{{unit}}}
|UNIT III|  LEVELS OF TESTING |9| 
Levels of Testing: The Need for levels of testing -- Unit test
functions, procedures, classes and methods as units -- Unit test
planning -- Designing the unit tests -- The test harness -- Running
the unit tests and recording results -- Integration tests -- Designing
integration tests -- Integration test planning -- System test --
Functional testing -- Performance testing-- Stress testing --
Configuration testing -- Security testing -- Recovery testing --
Regression testing -- Alpha, beta and acceptance tests.

{{{unit}}}
|UNIT IV| TEST AUTOMATION AND MANAGEMENT |9|
Test Planning, Management, execution and Reporting : Test planning --
Management -- Process -- Reporting; Software Test Automation: Testing
tools; Controlling and Monitoring the Testing Process: Measurements
and milestones for controlling and monitoring -- Criteria for test
completion -- Configuration management -- Controlling and monitoring.

{{{unit}}}
|UNIT V|SOFTWARE QUALITY ASSURANCE |9|
Software Quality; Quality Factors: Product operation, revision and
transition; Components of SQA: System and architecture; Pre-Project
Components; Contract Review; Development and Quality Plans; SQA
Components in Project Life Cycle: SQA defect removal policies;
Reviews; Project progress control; Costs; Quality Management
Standards; Project Process Standards; Management and its Role in SQA;
SQA Unit.

\hfill *Total: 45*

** COURSE OUTCOMES
Upon the completion of the course the students should be able to: 
- Have a high level understanding of software testing objectives,
  principles and practices (K2)
- Apply Black and whitebox approach to design test cases (K3)
- Understand and apply levels of testing (K3)
- Apply Automation tools for software testing in projects (K3)
- Analyze the product Quality (K3).

** TEXT BOOKS
1) Gopalaswamy Ramesh, Srinivasan Desikan,``Software Testing:
   Principles and Practices'', Pearson Education, New
   Delhi, 2006 (Units I, IV).
2) ELlene Burnstein, ''Practical Software Testing'', Springer
   International Edition, Chennai, 2003 (Units II, III, IV).

** REFERENCES
1. Aditya Mathur, ``Foundations of Software Testing'', Pearson
   Education, 2008.
2. Daniel Galin, ``Software Quality Assurance -- From Theory to
   Implementation'', Pearson Education, 2009 (UNIT-V)
3. Alan C Gillies, ``Software Quality Theory and Management'', 2nd
   Edition,Cengage Learning, 2003.
4. Robert Furtell, Donald Shafer, and Linda Shafer, ``Quality Software
   Project Management'', Pearson Education Asia, 2002.
5. Ron Patton, ``Software Testing'', 2nd Edition, Pearson
   Education, 2007.

