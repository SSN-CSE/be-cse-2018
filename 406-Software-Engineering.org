* <<<406>>> SOFTWARE ENGINEERING
:properties:
:author: Ms. K. Madheswari and Ms. S. Angel Deborah
:date: 
:end:

#+startup: showall

| L | T | P | C |
| 3 | 0 | 0 | 3 |

** Course Objectives
- To understand the phases in a software project
- To understand fundamental concepts of requirements engineering and Analysis Modeling.
- To understand the various software design methodologies
- To learn various testing and maintenance measures

|Unit I | SOFTWARE PROCESS AND AGILE DEVELOPMENT | 9 |
Introduction to Software Engineering, Software Process, Perspective and Specialized Process
Models –Introduction to Agility: Agile process.

|Unit II | PROJECT MANAGEMENT | 9 |
Estimation for Software Projects:Project Planning Process- Software Project Estimation – Decomposition Techniques - Empirical Estimation Models -The Make/Buy Decision - Project Scheduling - Risk Management: Risk Identification - Risk Projection - Risk Mitigation.

|Unit III | REQUIREMENTS ANALYSIS AND SPECIFICATION  | 9 |
Software Requirements: Functional and Non-Functional, User requirements, System requirements,
Software Requirements Document – Requirement Engineering Process: Feasibility Studies,
Requirements elicitation and analysis, requirements validation, requirements management -Classical
analysis: Structured system Analysis, Petri Nets.

|Unit IV | SOFTWARE DESIGN | 9 |
Design Concepts: Design process – Design Concepts -Design Model– Modeling Principles- Architectural Design: Architectural styles - Architectural Design- Architectural Mapping using Data Flow - User Interface Design: The Golden rules - Interface analysis - Interface Design –Component level Design: Designing Class based components - traditional Components.

|Unit V | TESTING AND MAINTENANCE | 9 |
Software testing fundamentals-Internal and external views of Testing-white box testing - basis
path testing-control structure testing-black box testing- Unit Testing – Integration Testing –Regression Testing- Validation Testing – System Testing - Debugging – Software Implementation: Coding practices and principles - Maintenance:Types - Reengineering- Reverse Engineering - Restructuring.



Total: 45

** Course Outcomes
After the completion of this course, students will be able to: 
- Identify the key activities in managing a software project and choose an appropraite process model(K2).
- Perform requirements engineering and Analysis Modeling(K3).
- Apply systematic procedure for software design and deployment(K3).
- Compare and contrast the various testing and maintenance(K4).
- Manage project schedule, estimate project cost and effort required(K3).
      
** Text Books
1. Roger S. Pressman, "Software Engineering – A Practitioner's Approach", Seventh Edition, McGraw-Hill International Edition, 2010.
2. Ian Sommerville, "Software Engineering", 9th Edition, Pearson Education Asia, 2011.


** References
1. Rajib Mall, "Fundamentals of Software Engineering", Third Edition, PHI Learning Private Limited, 2009.
2. Pankaj Jalote,"Software Engineering, A Precise Approach", Wiley India, 2010.
3. Kelkar S.A.,"Software Engineering", Prentice Hall of India Pvt Ltd, 2007.
4. Stephen R.Schach, "Software Engineering", Tata McGraw-Hill Publishing Company Limited,2007.
