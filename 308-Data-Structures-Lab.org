* <<<308>>> DATA STRUCTURES LAB
:properties:
:author: Ms. M. Saritha and Dr. B. Prabavathy
:date: 
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 0 | 0 | 4 | 2 |

** COURSE OBJECTIVES
- Understand and apply suitable data structure â€“ linear and non linear
- Design the data structure for the given problem and implement them in a high level programming language
- Understand the concepts and differences in searching and sorting techniques
- Learn the introductory concepts of hashing techniques


** SUGGESTIVE EXPERIMENTS
1. Array implementation of list ADT (e.g Manage student records)
2. Represent polynomial expression as linked list and write functions for polynomial manipulation
3. Implement doubly linked list ADT (e.g Insert, delete, search, merge, reverse operations)
4. Array implementation of Stack ADT (e.g Balancing paranthesis, infix to postfix conversion, evaluation of postfix expression)
5. Array implementation of Queue ADT (e.g Simulating printer jobs)
6. Implement an expression tree. Produce its pre-order, in-order, and post-order traversals
7. Implement binary search tree 
8. Implement AVL trees (e.g Implement dictionary)  
9. Implement priority queue using binary heaps (e.g Storing employee records based upon salary)
10. Graph representation and implement graph traversal algorithms 
11. Implement Dijkstra's algorithm using graph (e.g Find the shortest route to connect one city to another)
12. Implement binary search and any two sorting algorithms 
13. Implement hashing using separate chaining technique 

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Implement linear and non-linear data structures to solve a given problem (K3)
- Analyze a problem statement and suggest an appropriate linear / non-linear data structure
  for solving it (K4)
- Implement sorting, seraching and hashing algorithms (K2)

** Laboratory requirement for batch of 25 students

Hardware:\\
1. Systems - 25 

Software:\\
1. C / C++
      
