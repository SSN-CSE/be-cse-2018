* <<<503>>> THEORY OF COMPUTATION
:properties:
:author: Ms. A. Beulah and Mr. V. Balasubramanian
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** Course Objectives
- To construct finite automata for any given pattern and find its
  equivalent regular expressions.
- To understand the language hierarchy and to design a context free
  grammar for any given language.
- To construct pushdown automata for any CFL.
- To understand Turing machines and their capability.
- To understand undecidable problems.


{{{unit}}}
|UNIT I | FINITE AUTOMATA AND REGULAR LANGUAGES  | 10 |
Introduction-Basic Mathematical Notation and techniques; Finite
Automata (FA): Deterministic Finite Automata (DFA)– Non-deterministic
Finite Automata(NFA) – Finite Automata with Epsilon Transitions -
Equivalence of FA’s – Minimization of DFA; Regular Expressions and
Languages: Regular Expressions - Finite Automata and Regular
Expressions; Proving Languages Not to Be Regular - Closure and
Decision Properties of Regular Languages.

{{{unit}}}
|UNIT II | CONTEXT FREE GRAMMARS AND LANGUAGES  | 8 |
Chomsky’s hierarchy of languages; Context-Free Grammar (CFG) and
Context-Free Language (CFL) – Parse Trees – Ambiguity in Grammars and
Languages; Eliminating Useless Symbols - Computing the Generating and
Reachable Symbols - Eliminating Null Productions - Eliminating Unit
Productions - Normal Forms for Context Free Grammars.

{{{unit}}}
|UNIT III | PUSHDOWN AUTOMATA | 9 |
Definition of the Pushdown Automaton -The Languages of a PDA –
Equivalence of PDA's and CFG's - Deterministic Pushdown Automata;
Pumping Lemma for Context Free Languages.

{{{unit}}}
|UNIT IV | TURING MACHINES  | 9 |
The Turing Machine - Programming Techniques for Turing Machines -
Extensions to the Basic Turing Machine – Restricted Turing Machines.

{{{unit}}}
|UNIT V | UNDECIDABILITY | 9 |
Language That Is Not Recursively Enumerable - Undecidable Problem That
Is RE - Undecidable Problems About Turing Machines - Post's
Correspondence Problem - Other Undecidable Problems.

\hfill *Total Periods: 45*

** Course Outcomes
After the completion of this course, students will be able to: 
- Construct automata, regular expression for any given pattern (K3)
- Understand the need of formal languages, and grammars (K3)
- Design pushdown automata for any CFL (K3)
- Design Turing machines for any Languages (K3)
- Explain the Decidability or Undecidability of various problems (K2)

** Text Books 
1. Hopcroft J E, Motwani R and Ullman J D, “Introduction to Automata
   Theory, Languages and Computations”,3rd Edition, Pearson
   Education, 2008.

** References
1. Harry R Lewis and Christos H Papadimitriou, ``Elements of the Theory
   of Computation'', 2nd Edition, Prentice Hall of India, Pearson
   Education, 2003.
2. Peter Linz, ``An Introduction to Formal Language and
   Automata'',3rd Edition, Narosa Publishers,2002.
3. Mishra K L P and Chandrasekaran N, ``Theory of Computer Science
   -Automata, Languages and Computation'', 3rd Edition, Prentice
   Hall of India,2004.
