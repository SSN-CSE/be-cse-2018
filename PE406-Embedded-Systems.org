* <<<PE406>>> EMBEDDED SYSTEMS
:properties:
:author: Mr. K. R. Sarath Chandran and Ms. S. Angel Deborah
:date: 
:end:

#+begin_comment
- 1. Same as AU 2017 syllabus.  
- 2. No changes from AU 2017 syllabus
- 3. Not Applicable
- 4. Five Course outcomes specified and aligned with units
- 5. Not Applicable
#+end_comment

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To learn the architecture and programming of ARM processor
- To be familiar with the embedded computing platform design and
  analysis
- To study interfacing concepts
- To learn an embedded firmware and its designs
- To design embedded systems and to develop programs.

{{{unit}}}
| UNIT I | EMBEDDED COMPUTING AND ARM PROCESSORS | 9 |
Complex systems and micro processors -- Embedded system design process
-- Design Example: Model train controller -- Instruction sets
preliminaries -- ARM processor -- CPU: Programming input and output --
Supervisor mode, exceptions and traps -- Co-processors -- Memory system
mechanisms -- CPU performance -- CPU power consumption.

{{{unit}}}
| UNIT II | EMBEDDED COMPUTING PLATFORM DESIGN | 9 |
CPU Bus -- Memory devices and systems -- Designing with computing
platforms -- Consumer electronics architecture -- Platform-level
performance analysis -- Components for embedded programs -- Models of
programs -- Assembly, linking and loading -- Compilation techniques --
Program level performance analysis -- Software performance optimization
-- Program level energy and power analysis and optimization -- Analysis
and optimization of program size -- Program validation and testing.

{{{unit}}}
| UNIT III | SENSOR INTERFACING WITH ARDUINO | 9 |
Basics of hardware design and functions of basic passive components --
Sensors and Actuators -- Arduino code -- Library file for sensor
interfacing -- Construction of basic applications.

{{{unit}}}
| UNIT IV | EMBEDDED FIRMWARE | 9 |
Reset Circuit, Brown-out Protection Circuit-Oscillator Unit -- Real
Time Clock-Watchdog Timer -- Embedded Firmware Design Approaches and
Development Languages.

{{{unit}}}
| UNIT V | EMBEDDED C PROGRAMMING | 9 |
Introduction -- Creating hardware delays using Timer 0 and Timer 1
-- Reading switches -- Adding Structure to the code -- Generating a
Minimum and Maximum delay-Example: Creating a portable hardware
delay -- Timeout mechanisms -- Creating loop timeouts -- Testing loop
timeouts -- Hardware timeouts -- Testing a hardware timeout.

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Understand the architecture and programming of ARM processor (K2)
- Understand the concepts of embedded systems (K2)
- Understand peripherals and interfacing of sensors (K2)
- Apply the system design techniques to develop firmware (K3)
- Implement the code for constructing a system (K3).

** TEXT BOOKS
1. Marilyn Wolf, ``Computers as Components -- Principles of Embedded
   Computing System Design'', 3rd Edition, Morgan Kaufmann Publisher
   (An imprint from Elsevier), 2012.
2. Michael J Pont, ``Embedded C'' , 2nd Edition, Pearson
   Education, 2008.

** REFERENCES
1. Shibu K V, ``Introduction to Embedded Systems'', McGraw Hill, 2014.
2. Jonathan W Valvano, ``Embedded Microcomputer Systems Real Time
   Interfacing'', 3rd Edition Cengage Learning, 2012.
3. Raj Kamal, ``Embedded Systems-Architecture, Programming and
   Design'', 3rd edition, TMH, 2015.
4. Lyla, ``Embedded Systems'', Pearson, 2013.
5. David E Simon, ``An Embedded Software Primer'', Pearson
   Education,2000.
