* <<<404>>> DESIGN AND ANALYSIS OF ALGORITHMS
:properties:
:author: Mr. V. Balasubramanian and Dr. S. Kavitha
:date: 15.11.2018
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 2 | 4 |

** Course Objectives
- Learn the algorithm analysis techniques.
- Become familiar with the different algorithm design techniques.
- Understand the limitations of Algorithm power.

|Unit I|Introduction and Analysis |10| 
Introduction: Notion of an Algorithm –- Fundamentals of Algorithmic Problem Solving –- Important Problem Types; Fundamentals of the Analysis of Algorithm Efficiency: The Analysis Framework –- Asymptotic Notations, properties and Basic Efficiency Classes -– Mathematical analysis for Recursive and Non-recursive algorithms -- Empirical Analysis of Algorithms -- Algorithm Visualization.

|Unit II|Brute Force and Divide and Conquer |8| 
Brute Force and Exhaustive Search: Brute-Force String Matching -- Closest-Pair and Convex-Hull Problems; Exhaustive Search: Traveling Salesman Problem -- Knapsack Problem -- Assignment problem.
Divide and conquer: Merge sort –- Quick sort -– Multiplication of Large Integers and Strassen‟s Matrix Multiplication -- Closest-Pair and Convex-Hull Problems.

|Unit III |Dynamic Programming and Greedy Technique |9| 
Dynamic Programming: Computing a Binomial Coefficient -- Knapsack Problem and Memory functions -- Optimal Binary Search Trees -- Warshall‟s and Floyd‟s algorithm.
Greedy Technique: Prim‟s algorithm -- Kruskal's Algorithm -- Dijkstra's Algorithm -- Huffman Trees and codes.

|Unit IV | Iterative Improvement and Backtracking |9| 
Iterative Improvement: The Simplex Method -- The Maximum-Flow Problem –- Maximm Matching in Bipartite Graphs -- The Stable marriage Problem; Backtracking: n-Queens problem –- Hamiltonian Circuit Problem -– Subset Sum Problem.

|Unit V | Branch & Bound and Limitations of Algorithm Power |9| 
Branch and Bound: Assignment problem –- Knapsack Problem –- Traveling Salesman Problem; Limitations of Algorithm Power: Lower-Bound Arguments -- P, NP and NP-Complete Problems; Coping with the Limitations of Algorithm Power: Approximation Algorithms for NP–Hard Problems –- Traveling Salesman problem -– Knapsack problem.

|Total:|45|

** Course Outcomes
- Design algorithms for various computing problems (K3)
- Analyze the time and space complexity of algorithms (K4)
- Critically analyze the different algorithm design techniques for a given problem (K4)
- Modify existing algorithms to improve efficiency (K4)
- Understand the limitation of algorithm power (K2)

** References
1. Anany Levitin, “Introduction to the Design and Analysis of Algorithms”, Third Edition, Pearson Education, 2012.
2. Ellis Horowitz, Sartaj Sahni and Sanguthevar Rajasekaran, Computer Algorithms, Second Edition, Universities Press, 2007. 
3. Thomas H.Cormen, Charles E.Leiserson, Ronald L. Rivest and Clifford Stein, “Introduction to Algorithms”, Third Edition, PHI Learning Private Limited, 2012
4. Alfred V. Aho, John E. Hopcroft and Jeffrey D. Ullman, “Data Structures and Algorithms”, Pearson Education, Reprint 2006
5. Steven S. Skiena, “The Algorithm Design Manual”, Second Edition, Springer, 2008.

** LAB EXERCISES

1. Implementation of non recusive and recursive algothms for the given problem 
2. Implementation of string matching using Brute Force technique
3. Implementation of assignment problem using Exhaustive Search technique
4. Implementation of merge sort and quick sort using Divide and Conquer technique
5. Implementation of Knapsack Problem using Dynamic Programming 
6. Implementation of Huffman Trees and generate its code 
8. Implementation of n-Queens problem using Backtracking technique 
9. Implementation of Traveling Salesman Problem using Branch and Bound technique
10. Mini project 

|Total:|20|
