* <<<PE105>>> LOGIC PROGRAMMING
:properties:
:author: Dr. S. Sheerazuddin and Dr. R. S. Milton
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** Course Objectives
- To learn the foundations of Logic programming.
- To learn PROLOG.
- To learn implementation of informed and uninformed search algorithms in PROLOG.
- To learn  implementation of Expert system shell in PROLOG.

{{{unit}}}
|Unit I|INTRODUCTION TO LOGIC|9|
Foundations of Propositional Logic: Syntax and Semantics – Semantic Entailment; Normal Forms; Resolution in PL; Horn Logic; Foundations of First Order Logic: Syntax and Semantics; Normal Forms; Undecidability of Predicate Logic; Resolution in FOL:  Unification; Refinements of Resolution: P-resolution – N-resolution – linear resolution – unit resolution --  SLD resolution – LUSH resolution;


{{{unit}}}
|Unit II|INTRODUCTION TO LOGIC PROGRAMMING|9|
Foundations: Answer Generation; Horn Clause Programs: Semantics of Logic Program – Procedural Semantics – Model-theoretic Semantics; Evaluation Strategies: Swapping Lemma – PROLOG’s Evaluation Strategy – DFS -- BFS; 

{{{unit}}}
|Unit III|PROGRAMMING IN PROLOG|9|
Syntax & Semantics of PROLOG -- Programming with relations -- Facts -- Questions  -- Variables -- Conjunctions of goals -- backtracking  --  Rules  --  Structures --   Recursive programs  --   Lists --   Controlling execution -- the cut – Input Output – Exception Handling;

{{{unit}}}
|Unit IV|PROLOG AND ARTIFICIAL INTELLIGENCE|9|
Overview of PROLOG: Lists – Operators – Arithmetic – Data Structures –Eight Queens Problem; Operations on Data Structures: Representing and Sorting Lists – Representing Sets by Binary Trees – Insertion & Deletion in Binary Dictionary – Displaying Trees – Graphs; Advanced Tree Representations; Problem Solving Strategies in AI: DFS – BFS – Best-first Search – A* Search; Problem Reduction & AND/OR Graph: Basic AND/OR search procedure -- Best-first AND/OR search; Game Playing: The minimax principle -- The alpha-beta algorithm -- Minimax-based programs;

{{{unit}}}
|Unit V|PROLOG AND EXPERT SYSTEMS|9|
Foundations: Introduction to Expert Systems – Features of Expert Systems -- Functions of an Expert System -- Structure of an Expert System; If-then rules for representing knowledge; Developing a Simple Shell: Implementation--Dealing with uncertainty;


\hfill *Total: <Total Hours>*

** Course Outcomes
After the completion of this course, students will be able to: 
-- write programs in PROLOG (K3).
- implement AI search algorithms in PROLOG (K3).
- implement a simple Expert system shell in PROLOG (K3).

** References:
1. Uwe Schoning “Logic for Computer Scientists” Birkhauser 1999. (Units I, II)
2. Ivan Bratko “PROLOG: Programming for Artificial Intelligence” 4th Edn. Pearson 2011. (Units III, IV, V)
3. Kees Doets “From Logic to Logic Programming” MIT Press 1994
4. Patrick Blackburn, Johan Bos, Kristina Streignitz “Learn PROLOG Now” College Publications 2006
5. Dennis Merritt “Building Expert Systems in PROLOG” Amzi! Inc. 2000
6. Helder Coelho, Jose C. Cotta “PROLOG by Example: How to Learn, Teach and Use It” Springer -Verlag 2011
7. W F Clocksin, C S Mellish “Programming in PROLOG” Springer - Verlag 2016
