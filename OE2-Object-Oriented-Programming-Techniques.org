* <<<OE2>>> OBJECT ORIENTED PROGRAMMING TECHNIQUES
:properties:
:author: B. Bharathi
:end:

#+startup: showall

{{{credits}}}
| L | T | P | C |
| 2 | 0 | 2 | 3 |

** COURSE OBJECTIVES
- To learn the basics of Object Oriented Programming 
- To learn the programming constructs of Java
- To know the principles of inheritance and polymorphism 

{{{unit}}}
| UNIT I | INTRODUCTION | 9 |
Principles of OOP: Classes -- Objects -- Data hiding -- Data
encapsulation -- Inheritance -- Polymorphism; Definition of classes:
objects - methods -- Access specifiers -- Static and final classes and
members; Object construction and destruction.

{{{unit}}}
| UNIT II | BASICS OF JAVA | 9 |
Features of Java -- Basics of Java programming: Data types -
Variables -- Operators -- Control structures -- Arrays -- Strings

{{{unit}}}
| UNIT III | CLASSES AND OBJECTS | 9 |
Objects and Classes in Java: Defining classes -- Methods -- Access
specifiers -- Static members; Constructors: Constructor overloading;
Method overloading -- Recursion -- Passing and returning object from
method -- Packages in Java.

{{{unit}}}
|UNIT IV | INHERITANCE | 9 |
Inheritance: Definition -- Types of inheritance: Single -- multilevel -
multiple -- hierarchical -- hybrid; Subclass constructors -- Interfaces
in Java: Definition, Implementation -- Extending interfaces -- Examples
in Java.

{{{unit}}}
| UNIT V | POLYMORPHISM | 9 |
Polymorphism: Method overloading and overriding -- Dynamic method
dispatch; Exceptions: Hierarchy, Built-in exceptions, Creating own
exception; Definition and Concepts: Generic methods -- Generic types.

\hfill *Theory Periods: 30*

** SUGGESTIVE EXPERIMENTS
 - Program in Java using classes and objects (Eg: Marklist generation)
 - Program to perform string operations using ArrayList. 
 - Program to implement packages (Eg: Currency converter)
 - Program using Inheritance (Eg: Payroll application)
 - Prgram to implement Polymorphism (Eg. Area of different shapes)
 - Program to implement generic methods (Eg: Sorting)
 - Design a Java interface for ADTs. (Eg. Stack, Queue).

\hfill *Practical Periods: 30*

\hfill *Total Periods: 60*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Understand object oriented programming features (K2)
- Develop programs using basic constructs of Java (K3)
- Solve problems using classes and methods (K3) 
- Develop programs using inheritance and interfaces (K3) 
- Use the concept of polymorphism (K3).
      
** TEXT BOOKS
1. Herbert Schildt, ``Java: The Complete Reference'', 8th Edition,
   McGraw Hill Education, 2011.

** REFERENCES
1. Timothy Budd, ``Understanding Object-oriented Programming with
   Java'', Updated Edition, Pearson Education, 2000.
2. C Thomas Wu, ``An introduction to Object-oriented Programming with
   Java'', Fourth Edition, Tata McGraw-Hill Publishing company
   Ltd., 2006.
3. Cay S Horstmann, Gary cornell, ``Core Java Volume â€“ I
   Fundamentals'' 9th Edition, Prentice Hall, 2013.
4. Paul Deitel, Harvey Deitel, ``Java SE 8 for programmers'', 3rd
   Edition, Pearson, 2015.
5. Steven Holzner, ``Java 2 Black book'', Dreamtech press, 2011.
